import type { ReactNode } from 'react';
import { TShirtSizes } from '../shared.synced';
import { ExtensionEvent, OverlayComponentProps } from '../shared.synced';
import { ReactionsHandler } from '../reactions.synced';
/**
 * @deprecated This type is deprecated and will be removed in a future release. Please use the `DropdownButtonItem` component instead.
 */
export interface DropdownOption {
    /**
     * Text to be displayed as the menu item text.
     *
     */
    label: string;
    /**
     * A function that will be invoked when the item is clicked.
     * It receives no arguments and its return value is ignored.
     *
     * @event
     */
    onClick?: () => void;
}
/**
 * The props type for {@link !components.DropdownButtonItem}.
 *
 * @category Component Props
 */
export interface DropdownButtonItemProps extends OverlayComponentProps {
    /**
     * Text to be displayed as the menu item text.
     * Can also accept ReactNode for more complex content.
     */
    children: ReactNode;
    /**
     * A function that will be invoked when the item is clicked.
     * It receives no arguments and its return value is ignored.
     *
     * @event
     */
    onClick?: ReactionsHandler<ExtensionEvent>;
}
/**
 * The props type for {@link !components.Dropdown}.
 *
 * @category Component Props
 */
export interface DropdownProps {
    /**
     * The list of options to be rendered within the dropdown menu.
     * Each option represents an entry in the Dropdown.
     *
     * @deprecated This prop is deprecated and will be removed in a future release.
     * Use child components instead to define dropdown menu items. For example,
     * use `<Dropdown.ButtonItem>` to render an action button within a dropdown menu.
     */
    options?: DropdownOption[];
    /**
     * Controls the appearance of the dropdown button
     *
     * @defaultValue `"secondary"`
     */
    variant?: 'primary' | 'secondary' | 'transparent';
    /**
     * Sets the content for the dropdown button.
     *
     * @defaultValue `"More"`
     */
    buttonText?: string;
    /**
     * Sets the size of the dropdown button.
     *
     * @defaultValue `"md"`
     */
    buttonSize?: TShirtSizes['xs'] | TShirtSizes['sm'] | TShirtSizes['md'];
    /**
     * Disables the ability to focus and click-to-expand of the dropdown button
     *
     * @defaultValue `false`
     */
    disabled?: boolean;
    /**
     * Sets the content that will render inside the Dropdown. You have to use `DropdownOption` component as a child of the `Dropdown` component.
     */
    children?: ReactNode;
}
