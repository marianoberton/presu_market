import { type FetchAssociationsRequest, type AssociationResult } from '../utils/fetchAssociations';
import { type FetchCrmPropertiesOptions } from '../utils/fetchCrmProperties';
export interface UseAssociationsOptions {
    propertiesToFormat?: 'all' | string[];
    formattingOptions?: FetchCrmPropertiesOptions['formattingOptions'];
}
export interface UseAssociationsPagination {
    hasNextPage: boolean;
    hasPreviousPage: boolean;
    currentPage: number;
    pageSize: number;
    nextPage: () => void;
    previousPage: () => void;
    reset: () => void;
}
export interface UseAssociationsResult {
    results: AssociationResult[];
    error: Error | null;
    isLoading: boolean;
    pagination: UseAssociationsPagination;
}
/**
 * A hook to fetch and manage associations between CRM objects with pagination support.
 */
export declare function useAssociations(config: Omit<FetchAssociationsRequest, 'offset'>, options?: UseAssociationsOptions): UseAssociationsResult;
