import { RenderedParentNode } from '../types';
import { RenderedRootNodeInternal } from './types-internal';
/**
 * Thrown when trying to trigger an event that has a handler prop that is not a function.
 */
export declare class InvalidEventFunctionError extends Error {
    constructor({ componentName, eventPropName, }: {
        componentName: string;
        eventPropName: string;
    });
}
/**
 * Thrown when trying to trigger an event that has no corresponding handler function in the props object.
 */
export declare class MissingEventFunctionError extends Error {
    constructor({ componentName, eventPropName, }: {
        componentName: string;
        eventPropName: string;
    });
}
/**
 * Thrown when a component is not found in the rendered output.
 */
export declare class ComponentNotFoundError extends Error {
    constructor({ findMethodName, parentNode, componentName, }: {
        findMethodName: string;
        parentNode: RenderedParentNode;
        componentName: string;
    });
}
/**
 * Thrown when invalid components are detected in the rendered output.
 */
export declare class InvalidComponentsError extends Error {
    constructor(rootNode: RenderedRootNodeInternal);
}
/**
 * Thrown when the target component passed to the find operation is not a valid HubSpot-provided React component.
 */
export declare class FindInvalidComponentError extends Error {
    constructor({ findMethodName }: {
        findMethodName: string;
    });
}
