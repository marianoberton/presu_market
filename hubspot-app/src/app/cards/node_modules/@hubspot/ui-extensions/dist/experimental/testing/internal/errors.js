import { printNode } from './print';
/**
 * Thrown when trying to trigger an event that has a handler prop that is not a function.
 */
export class InvalidEventFunctionError extends Error {
    constructor({ componentName, eventPropName, }) {
        super(`trigger("${String(eventPropName)}", ...) failed. Event function for prop "${String(eventPropName)}" in component "${componentName}" props is not a function`);
        this.name = 'InvalidEventFunctionError';
    }
}
/**
 * Thrown when trying to trigger an event that has no corresponding handler function in the props object.
 */
export class MissingEventFunctionError extends Error {
    constructor({ componentName, eventPropName, }) {
        super(`trigger("${String(eventPropName)}", ...) failed. Event function for prop "${String(eventPropName)}" not found in component "${componentName}" props`);
        this.name = 'MissingEventFunctionError';
    }
}
/**
 * Thrown when a component is not found in the rendered output.
 */
export class ComponentNotFoundError extends Error {
    constructor({ findMethodName, parentNode, componentName, }) {
        super(`${findMethodName}() failed. <${componentName}> not found in rendered output: ${parentNode.toString()}`);
        this.name = 'ComponentNotFoundError';
    }
}
/**
 * Thrown when invalid components are detected in the rendered output.
 */
export class InvalidComponentsError extends Error {
    constructor(rootNode) {
        super(`Invalid rendered output. Found invalid components (${rootNode.document
            .getInvalidComponentNames()
            .map((name) => `"${name}"`)
            .join(', ')}) in rendered output: ${printNode(rootNode, {
            markInvalidComponents: true,
            listInvalidComponents: true,
        })}`);
        this.name = 'InvalidComponentsError';
    }
}
/**
 * Thrown when the target component passed to the find operation is not a valid HubSpot-provided React component.
 */
export class FindInvalidComponentError extends Error {
    constructor({ findMethodName }) {
        super(`${findMethodName}() failed. The provided target component is not a HubSpot-provided React component`);
        this.name = 'FindInvalidComponentError';
    }
}
