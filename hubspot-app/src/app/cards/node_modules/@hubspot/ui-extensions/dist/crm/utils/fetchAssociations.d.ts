import { FetchCrmPropertiesOptions } from './fetchCrmProperties';
export declare const DEFAULT_PAGE_SIZE = 10;
/**
 * Calculate pagination flags based on current page and API hasMore flag
 */
export declare function calculatePaginationFlags(currentPage: number, hasMore: boolean): {
    hasNextPage: boolean;
    hasPreviousPage: boolean;
};
export type AssociationResult = {
    toObjectId: number;
    associationTypes: {
        category: string;
        typeId: number;
        label: string;
    }[];
    properties: {
        [key: string]: string | null;
    };
};
export type AssociationsResponse = {
    results: AssociationResult[];
    hasMore: boolean;
    nextOffset: number;
};
export type FetchAssociationsRequest = {
    toObjectType: string;
    properties?: string[];
    pageLength?: number;
    offset?: number;
};
export interface FetchAssociationsResult {
    data: AssociationsResponse;
    error?: string;
    cleanup: () => void;
}
export declare const fetchAssociations: (request: FetchAssociationsRequest, options?: FetchCrmPropertiesOptions) => Promise<FetchAssociationsResult>;
