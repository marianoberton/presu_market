import type { ExtensionPoints } from './extension-points.synced';
/** @ignore */
interface Team {
    id: number;
    name: string;
    teammates: number[];
}
/** @ignore */
export type Permission = 'integrations-management-write';
/** @ignore */
export interface UserContext {
    id: number;
    emails: string[];
    email: string;
    firstName: string;
    lastName: string;
    /** @deprecated Roles will always be empty. Please use teams instead */
    roles: string[];
    teams: Team[];
    locale?: string;
    permissions: Permission[];
}
/** @ignore */
export interface PortalContext {
    id: number;
    timezone: string;
}
/** @ignore */
export interface CrmRecordContext {
    objectId: number;
    objectTypeId: string;
}
/** @ignore */
export interface AppContext {
    appId: number | string;
    appName?: string;
    cardTitle?: string;
}
type ProfileVariableValue = string | number | bigint | boolean;
/** @ignore */
export interface BaseContext {
    user: UserContext;
    portal: PortalContext;
    variables?: Record<string, ProfileVariableValue>;
}
/** @ignore */
export interface CrmContext extends BaseContext {
    location: 'crm.record.tab' | 'crm.record.sidebar' | 'crm.preview' | 'helpdesk.sidebar';
    crm: CrmRecordContext;
    extension?: AppContext;
}
/** @ignore */
export interface SettingsContext extends BaseContext {
    location: 'settings';
}
/** @ignore */
export interface AppHomeContext extends BaseContext {
    location: 'home';
}
/** @ignore */
export interface GenericContext extends BaseContext {
    location: 'uie.playground.middle';
}
/** @ignore */
export interface BaseExtensionContextData {
    appId: number | string;
    appName?: string;
    cardId: string;
    cardTitle?: string;
    location: keyof ExtensionPoints;
    sourceId?: string | null;
    appAccessLevel: 'PUBLIC' | 'PRIVATE';
    additionalProperties?: {
        [key: string]: string;
    } | null;
}
/** @ignore */
export interface CrmExtensionContextData extends BaseExtensionContextData {
    objectId: number | string;
    objectTypeId: string;
}
export {};
