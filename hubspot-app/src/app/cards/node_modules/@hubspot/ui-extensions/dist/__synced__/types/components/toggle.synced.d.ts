import { TShirtSizes } from '../shared.synced';
/**
 * The props type for {@link !components.Toggle}.
 *
 * @category Component Props
 */
export interface ToggleProps {
    /**
     * The current status of the input.
     */
    checked?: boolean;
    /**
     * When set to `true`, the option cannot be selected.
     */
    readonly?: boolean;
    /**
     * The unique identifier for the toggle element.
     */
    name?: string;
    /**
     * The size variation of the toggle.
     *
     * @defaultValue `"medium"`
     */
    size?: TShirtSizes['xs'] | TShirtSizes['sm'] | TShirtSizes['md'] | 'default';
    /**
     * A function that is called when the `checked` input status changes.
     *
     * @event
     */
    onChange?: (checked: boolean) => void;
    /**
     * When set to `true`, the option will be selected by default. Use it to
     * set the default `checked` state when the component is **uncontrolled**.
     */
    initialIsChecked?: boolean;
    /**
     * The companion text of for Toggle. It can be displayed on top,
     * inline, or hidden. When hidden, it will remain usable for screen readers.
     */
    label: string;
    /**
     * Controls the display setting of the label prop.
     *
     * @defaultValue `"inline"`
     */
    labelDisplay?: 'inline' | 'top' | 'hidden';
    /**
     * The text that appears on the Toggle when `checked={true}`.
     *
     * @defaultValue `"ON"`
     */
    textChecked?: string;
    /**
     * The text that appears on the Toggle when `checked={false}`.
     *
     * @defaultValue `"ON"`
     */
    textUnchecked?: string;
}
