import { ReactNode } from 'react';
import { OverlayComponentProps, HrefProp, TShirtSizes, IconNames, ExtensionEvent } from '../shared.synced';
import { ReactionsHandler } from '../reactions.synced';
export interface BaseButtonProps {
    /**
     * A function that will be invoked when the button is clicked. Do not use this function for submitting a form; use Form's `onSubmit` function instead.
     *
     * @event
     */
    onClick?: ReactionsHandler<ExtensionEvent>;
    /**
     * A URL that will be opened when the button is clicked. If the value is a URL external to `hubspot.com` it will be opened in a new tab.
     */
    href?: HrefProp;
    /**
     * Determines whether or not the button should be disabled.
     */
    disabled?: boolean;
    /**
     * Sets the color variation of the button.
     *
     * @defaultValue `"secondary"`
     */
    variant?: 'primary' | 'secondary' | 'destructive' | 'transparent';
    /**
     * Sets the HTML attribute "role" of the button.
     *
     * @defaultValue `"button"`
     */
    type?: 'button' | 'reset' | 'submit';
    /**
     * Sets the content that will render inside the Button. This prop is passed implicitly by providing sub-components. Only regular text and Icons are permitted.
     */
    children: ReactNode;
    /**
     * Sets the size of the button.
     *
     * @defaultValue `"md"`
     */
    size?: TShirtSizes['xs'] | TShirtSizes['sm'] | TShirtSizes['md'];
}
/**
 * The props type for {@link !components.Button}.
 *
 * @category Component Props
 */
export interface ButtonProps extends BaseButtonProps, OverlayComponentProps {
}
/**
 * Extra configuration passed to the overlay
 */
export interface LoadingButtonOverlayOptions {
    /**
     * If `onLoadingFinish`, the overlay will open once the loading operation is done.
     * If `onClick`, the overlay will open as soon as there is a click on the button.
     *
     * @defaultValue `"onClick"`
     */
    openBehavior?: 'onClick' | 'onLoadingFinish';
}
/**
 * The props type for {@link !components.LoadingButton}.
 *
 * @category Component Props
 */
export interface LoadingButtonProps extends BaseButtonProps, OverlayComponentProps {
    /**
     * Sets the color variation of the button.
     *
     * @defaultValue `"secondary"`
     */
    variant?: 'primary' | 'secondary' | 'destructive';
    /**
     * If true, the loading indicator is shown and the button becomes disabled.
     *
     * @defaultValue `false`
     */
    loading?: boolean;
    /**
     * Extra configuration passed to the overlay
     */
    overlayOptions?: LoadingButtonOverlayOptions;
    /**
     * Controls the icon that's shown after loading is done.
     *
     * @defaultValue `"success"`
     */
    resultIconName?: IconNames;
}
